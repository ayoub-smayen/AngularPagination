{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","webpack:///src/app/pages/tables/components/employee-table/employee-table.component.ts","webpack:///src/app/pages/tables/components/employee-table/employee-table.component.html","webpack:///src/app/pages/tables/components/index.ts","webpack:///src/app/pages/tables/components/material-table/material-table.component.ts","webpack:///src/app/pages/tables/components/material-table/material-table.component.html","webpack:///src/app/pages/tables/containers/index.ts","webpack:///src/app/pages/tables/containers/tables-page/tables-page.component.ts","webpack:///src/app/pages/tables/containers/tables-page/tables-page.component.html","webpack:///src/app/pages/tables/services/index.ts","webpack:///src/app/pages/tables/services/tables.service.ts","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tables.module.ts"],"names":["_c0","_c1","enterDuration","_c2","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CLICK_ACTION","nextUniqueId","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_clickAction","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","disableRipple","disabled","detectChanges","value","checked","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","emit","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","origin","options","focusVia","animSuffix","nativeCheckbox","_required","newValue","changed","ɵfac","MatCheckbox_Factory","t","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","selector","host","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","_MatCheckboxRequiredValidatorModule_Factory","ngJitMode","declarations","exports","MatCheckboxModule","MatCheckboxModule_Factory","imports","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","$implicit","MatPaginator_div_2_mat_form_field_3_Template","_r8","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ctx_r7","_changePageSize","ctx_r3","pageSize","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","ctx_r0","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","MatPaginatorIntl_Factory","ɵprov","token","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","map","p","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","matTooltipAnimations","tooltipState","opacity","transform","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_overlay","_scrollDispatcher","_viewContainerRef","_platform","_ariaDescriber","scrollStrategy","_dir","_defaultOptions","_hammerLoader","_position","touchGestures","_message","_passiveListeners","Map","_destroyed","_handleKeydown","_isTooltipVisible","keyCode","preventDefault","run","hide","_scrollStrategy","pipe","show","addEventListener","_setupPointerEvents","clearTimeout","_touchstartTimeout","_overlayRef","dispose","_tooltipInstance","removeEventListener","forEach","listener","clear","next","complete","removeDescription","message","delay","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","TooltipComponent","attach","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","_updatePosition","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","Object","assign","main","fallback","isLtr","originPosition","originX","originY","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","asObservable","updatePosition","tooltipClass","IOS","ANDROID","set","_disableNativeGesturesIfNecessary","touchendListener","style","gestures","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Handset","toState","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","_animationDone","tmp_0_0","currVal_0","matches","pipes","data","animation","animations","MatTooltipModule","MatTooltipModule_Factory","entryComponents","selection","EmployeeTableComponent","displayedColumns","isShowFilterInput","dataSource","employeeTableData","paginator","numSelected","selected","numRows","isAllSelected","row","select","isSelected","filterValue","target","filter","toLowerCase","showFilterInput","templateUrl","styleUrls","MaterialTableComponent","materialTableDate","TablesPageComponent","service","employeeTableData$","loadEmployeeTableData","materialTableData$","loadMaterialTableData","TablesService","company","city","state","email","product","price","date","status","routes","path","component","TablesRoutingModule","forChild","TablesModule"],"mappings":"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","file":"pages-tables-tables-module-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule, CdkScrollableModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { Employee } from '../../models/employee';\r\n\r\n@Component({\r\n  selector: 'app-employee-table',\r\n  templateUrl: './employee-table.component.html',\r\n  styleUrls: ['./employee-table.component.scss']\r\n})\r\nexport class EmployeeTableComponent implements OnInit {\r\n  @Input() employeeTableData: Employee[];\r\n  public displayedColumns: string[] = ['select', 'name', 'company', 'city', 'state'];\r\n  public dataSource: MatTableDataSource<Employee>;\r\n  public selection = new SelectionModel<Employee>(true, []);\r\n\r\n  public isShowFilterInput = false;\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  public ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource<Employee>(this.employeeTableData);\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  public isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  public masterToggle(): void {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  public checkboxLabel(row?: any): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n\r\n  public applyFilter(event: Event): void {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  public showFilterInput(): void {\r\n    this.isShowFilterInput = !this.isShowFilterInput;\r\n    this.dataSource = new MatTableDataSource<Employee>(this.employeeTableData);\r\n  }\r\n}\r\n","<mat-card class=\"employee-table-wrapper\">\r\n  <mat-card-title class=\"employee-table-wrapper__header\">\r\n    <p *ngIf=\"!isShowFilterInput\" class=\"employee-table-wrapper__title\">Employee List</p>\r\n    <div *ngIf=\"isShowFilterInput\" class=\"employee-table-wrapper__search\">\r\n      <div class=\"employee-table-wrapper__icon-wrapper\">\r\n        <mat-icon class=\"employee-table-wrapper__icon\">search</mat-icon>\r\n      </div>\r\n      <input matInput class=\"employee-table-wrapper__search-input\" (keyup)=\"applyFilter($event)\">\r\n      <button class=\"employee-table-wrapper__button\" mat-mini-fab (click)=\"showFilterInput()\">\r\n        <mat-icon class=\"employee-table-wrapper__icon\">close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button class=\"employee-table-wrapper__button\" mat-mini-fab (click)=\"showFilterInput()\">\r\n      <mat-icon class=\"employee-table-wrapper__icon\">search</mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n  <mat-card-content class=\"employee-table__content\">\r\n    <table class=\"employee-table__table\" mat-table [dataSource]=\"dataSource\">\r\n\r\n      <!-- Checkbox Column -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th class=\"employee-table__table-checkbox\" mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (change)=\"$event ? masterToggle() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\">\r\n          </mat-checkbox>\r\n        </th>\r\n        <td class=\"employee-table__table-checkbox\" mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"$event.stopPropagation()\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\">\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\" >\r\n        <th class=\"employee-table__table-header\" mat-header-cell *matHeaderCellDef > Name </th>\r\n        <td class=\"employee-table__table-body\" mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Company Column -->\r\n      <ng-container matColumnDef=\"company\">\r\n        <th class=\"employee-table__table-header\" mat-header-cell *matHeaderCellDef> Company </th>\r\n        <td class=\"employee-table__table-body\" mat-cell *matCellDef=\"let element\"> {{element.company}} </td>\r\n      </ng-container>\r\n\r\n      <!-- City Column -->\r\n      <ng-container matColumnDef=\"city\">\r\n        <th class=\"employee-table__table-header\" mat-header-cell *matHeaderCellDef> City </th>\r\n        <td class=\"employee-table__table-body\" mat-cell *matCellDef=\"let element\"> {{element.city}} </td>\r\n      </ng-container>\r\n\r\n      <!-- State Column -->\r\n      <ng-container matColumnDef=\"state\">\r\n        <th class=\"employee-table__table-header\" mat-header-cell *matHeaderCellDef> State </th>\r\n        <td class=\"employee-table__table-body\" mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n          (click)=\"selection.toggle(row)\">\r\n      </tr>\r\n    </table>\r\n  </mat-card-content>\r\n  <div class=\"pagination\">\r\n    <mat-paginator [pageSizeOptions]=\"[10, 15, 100]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>\r\n","export * from './material-table/material-table.component';\r\nexport * from './employee-table/employee-table.component';\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Customer } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-material-table',\r\n  templateUrl: './material-table.component.html',\r\n  styleUrls: ['./material-table.component.scss']\r\n})\r\nexport class MaterialTableComponent implements OnInit {\r\n  @Input() materialTableDate: Customer[];\r\n  public displayedColumns: string[] = ['name', 'email', 'product', 'price', 'date', 'city', 'status'];\r\n  public dataSource: Customer[];\r\n\r\n  public ngOnInit() {\r\n    this.dataSource = this.materialTableDate;\r\n  }\r\n}\r\n","<mat-card class=\"material-table\">\r\n  <mat-card-title class=\"material-table__header\">\r\n    <h5 class=\"material-table__title\">Material-UI Table</h5>\r\n    <app-settings-menu></app-settings-menu>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"material-table__content\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"material-table__table\">\r\n      <ng-container *ngFor=\"let column of displayedColumns\" matColumnDef=\"{{column}}\" class=\"material-table__table-row\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"material-table__table-row-title\">{{column}}</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"material-table__table-content\">\r\n          <span *ngIf=\"column !== 'status'\">{{element[column]}}</span>\r\n          <div *ngIf=\"column === 'status'\" class=\"material-table__content-badge\" [ngClass]=\"element[column]\">\r\n            <span>{{element[column]}}</span>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n","export * from './tables-page/tables-page.component';\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TablesService } from '../../services';\r\nimport { Customer, Employee } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-tables-page',\r\n  templateUrl: './tables-page.component.html',\r\n  styleUrls: ['./tables-page.component.scss']\r\n})\r\nexport class TablesPageComponent {\r\n  public employeeTableData$: Observable<Employee[]>\r\n  public materialTableData$: Observable<Customer[]>\r\n\r\n  constructor(private service: TablesService) {\r\n    this.employeeTableData$ = service.loadEmployeeTableData();\r\n    this.materialTableData$ = service.loadMaterialTableData();\r\n  }\r\n}\r\n","<app-layout>\r\n  <mat-toolbar class=\"page-header\" role=\"heading\">\r\n    <h1>Tables</h1>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"tables-wrapper\">\r\n    <app-employee-table [employeeTableData]=\"employeeTableData$ | async\"></app-employee-table>\r\n    <app-material-table [materialTableDate]=\"materialTableData$ | async\"></app-material-table>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</app-layout>\r\n","export * from './tables.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport {Customer, Employee} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TablesService {\r\n  public loadEmployeeTableData(): Observable<Employee[]> {\r\n    return of([\r\n      {name: 'Joe James', company: 'Example Inc.', city: 'Yonkers', state: 'NY'},\r\n      {name: 'John Walsh', company: 'Example Inc.', city: 'Hartford', state: 'CT'},\r\n      {name: 'Bob Herm', company: 'Example Inc.', city: 'Tampa', state: 'FL'},\r\n      {name: 'James Houston', company: 'Example Inc.', city: 'Dallas', state: 'TX'},\r\n      {name: 'Prabhakar Linwood', company: 'Example Inc.', city: 'Hartford', state: 'CT'},\r\n      {name: 'Kaui Ignace', company: 'Example Inc.', city: 'Yonkers', state: 'NY'},\r\n      {name: 'Esperanza Susanne', company: 'Example Inc.', city: 'Hartford', state: 'CT'},\r\n      {name: 'Christian Birgitte', company: 'Example Inc.', city: 'Tampa', state: 'FL'},\r\n      {name: 'Meral Elias', company: 'Example Inc.', city: 'Hartford', state: 'CT'},\r\n      {name: 'Deep Pau', company: 'Example Inc.', city: 'Yonkers', state: 'NY'},\r\n      {name: 'Sebastiana Hani', company: 'Example Inc.', city: 'Dallas', state: 'TX'},\r\n      {name: 'Marciano Oihana', company: 'Example Inc.', city: 'Yonkers', state: 'NY'},\r\n      {name: 'Brigid Ankur', company: 'Example Inc.', city: 'Dallas', state: 'TX'},\r\n      {name: 'Anna Siranush', company: 'Example Inc.', city: 'Yonkers', state: 'NY'},\r\n      {name: 'Avram Sylva', company: 'Example Inc.', city: 'Hartford', state: 'CT'},\r\n      {name: 'Serafima Babatunde', company: 'Example Inc.', city: 'Tampa', state: 'FL'},\r\n      {name: 'Gaston Festus', company: 'Example Inc.', city: 'Tampa', state: 'FL'}\r\n    ]);\r\n  }\r\n\r\n  public loadMaterialTableData(): Observable<Customer[]> {\r\n    return of([\r\n      {\r\n        name: 'Mark Otto',\r\n        email: 'ottoto@wxample.com',\r\n        product: 'ON the Road',\r\n        price: '$25 224.2',\r\n        date: '11 May 2017',\r\n        city: 'Otsego',\r\n        status: 'send'\r\n      },\r\n      {\r\n        name: 'Jacob Thornton',\r\n        email: 'thornton@wxample.com',\r\n        product: 'HP Core i7',\r\n        price: '$1 254.2',\r\n        date: '4 Jun 2017',\r\n        city: 'Fivepointville',\r\n        status: 'send'\r\n      },\r\n      {\r\n        name: 'Larry the Bird',\r\n        email: 'bird@wxample.com',\r\n        product: 'Air Pro',\r\n        price: '$1 570.0',\r\n        date: '27 Aug 2017',\r\n        city: 'Leadville North',\r\n        status: 'pending'\r\n      },\r\n      {\r\n        name: 'Joseph May',\r\n        email: 'josephmay@wxample.com',\r\n        product: 'Version Control',\r\n        price: '$5 224.5',\r\n        date: '19 Feb 2018',\r\n        city: 'Seaforth',\r\n        status: 'declined'\r\n      },\r\n      {\r\n        name: 'Peter Horadnia',\r\n        email: 'horadnia@wxample.com',\r\n        product: 'Let\\'s Dance',\r\n        price: '$43 594.7',\r\n        date: '1 Mar 2018',\r\n        city: 'Hanoverton',\r\n        status: 'send'\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TablesPageComponent } from './containers';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TablesPageComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class TablesRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule} from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { TablesPageComponent } from './containers';\r\nimport { TablesRoutingModule } from './tables-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { EmployeeTableComponent, MaterialTableComponent } from './components';\r\nimport { TablesService } from './services';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TablesPageComponent,\r\n    MaterialTableComponent,\r\n    EmployeeTableComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TablesRoutingModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    TablesService\r\n  ]\r\n})\r\nexport class TablesModule { }\r\n"]}